<?php
header('Content-Type: application/json');

// API key & URL
$apiKey = 'AIzaSyArQjQP3jxsa14vl8CwXzZDIsg1lithCmE'; // Thay b·∫±ng API key th·∫≠t
$apiUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=' . urlencode($apiKey);

// Nh·∫≠n n·ªôi dung ng∆∞·ªùi d√πng
$input = json_decode(file_get_contents('php://input'), true);
$userMessage = strtolower(trim($input['message'] ?? ''));

if (!$userMessage) {
    echo json_encode(['error' => 'Kh√¥ng nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn']);
    exit;
}

// K·∫øt n·ªëi CSDL
$conn = new mysqli("localhost", "root", "", "ql_cosothuctap");
$conn->set_charset("utf8mb4");

if ($conn->connect_error) {
    echo json_encode(['error' => 'K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu th·∫•t b·∫°i', 'details' => $conn->connect_error]);
    exit;
}

$dataText = '';
$topic = 'chung';
$matched = false;

// === 1. X·ª¨ L√ù NG√ÄNH ===
function extractMajor($message)
{
    $aliasMajors = [
        'C√¥ng ngh·ªá th√¥ng tin' => ['c√¥ng ngh·ªá th√¥ng tin', 'cntt', 'it', 'ng√†nh cntt', 'ng√†nh it', 'khoa cntt'],
        'Kinh t·∫ø' => ['kinh t·∫ø', 'k·∫ø to√°n', 't√†i ch√≠nh', 'khoa kinh t·∫ø'],
        'M√¥i tr∆∞·ªùng' => ['m√¥i tr∆∞·ªùng', 'khoa m√¥i tr∆∞·ªùng'],
        'Qu·∫£n l√Ω ƒë·∫•t ƒëai' => ['qu·∫£n l√Ω ƒë·∫•t ƒëai', 'qlƒëƒë', 'ng√†nh ql ƒë·∫•t ƒëai'],
        'Kh√≠ t∆∞·ª£ng th·ªßy vƒÉn' => ['kh√≠ t∆∞·ª£ng', 'th·ªßy vƒÉn', 'kh√≠ t∆∞·ª£ng th·ªßy vƒÉn'],
        'Tr·∫Øc ƒë·ªãa b·∫£n ƒë·ªì' => ['tr·∫Øc ƒë·ªãa', 'b·∫£n ƒë·ªì', 'tr·∫Øc ƒë·ªãa b·∫£n ƒë·ªì'],
        'ƒê·ªãa ch·∫•t' => ['ƒë·ªãa ch·∫•t', 'khoa ƒë·ªãa ch·∫•t'],
        'T√†i nguy√™n n∆∞·ªõc' => ['t√†i nguy√™n n∆∞·ªõc', 'n∆∞·ªõc'],
        'L√Ω lu·∫≠n ch√≠nh tr·ªã' => ['l√Ω lu·∫≠n', 'ch√≠nh tr·ªã', 'l√Ω lu·∫≠n ch√≠nh tr·ªã'],
        'Bi·ªÉn - H·∫£i ƒë·∫£o' => ['bi·ªÉn', 'h·∫£i ƒë·∫£o'],
        'Bi·∫øn ƒë·ªïi kh√≠ h·∫≠u' => ['bi·∫øn ƒë·ªïi kh√≠ h·∫≠u', 'bi·∫øn ƒë·ªïi th·ªùi ti·∫øt'],
        'Khoa h·ªçc ƒë·∫°i c∆∞∆°ng' => ['ƒë·∫°i c∆∞∆°ng', 'khoa h·ªçc ƒë·∫°i c∆∞∆°ng'],
        'Th·ªÉ ch·∫•t qu·ªëc ph√≤ng' => ['th·ªÉ ch·∫•t', 'qu·ªëc ph√≤ng', 'tcqp'],
        'Lu·∫≠t' => ['lu·∫≠t', 'b·ªô m√¥n lu·∫≠t'],
        'Ngo·∫°i ng·ªØ' => ['ngo·∫°i ng·ªØ', 'ti·∫øng anh', 'english'],
    ];

    foreach ($aliasMajors as $major => $aliases) {
        foreach ($aliases as $alias) {
            if (strpos($message, $alias) !== false) {
                return $major;
            }
        }
    }
    return '';
}


$nganhHoc = extractMajor($userMessage);
if ($nganhHoc) {
    $result = $conn->query("SELECT ten_cong_ty, linh_vuc, dia_chi 
                            FROM cong_ty 
                            WHERE trang_thai='ƒê√£ duy·ªát' AND linh_vuc LIKE '%$nganhHoc%' 
                            LIMIT 5");
    $dataText .= "**G·ª¢I √ù C√îNG TY TH·ª∞C T·∫¨P CHO NG√ÄNH _{$nganhHoc}_**:\n\n";
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $dataText .= "üè¢ **{$row['ten_cong_ty']}**\nüìã **Lƒ©nh v·ª±c**: {$row['linh_vuc']}\nüìç **ƒê·ªãa ch·ªâ**: {$row['dia_chi']}\n\n";
        }
    } else {
        $dataText .= "Hi·ªán t·∫°i ch∆∞a c√≥ c√¥ng ty n√†o ph√π h·ª£p v·ªõi ng√†nh *{$nganhHoc}*.\n";
    }
    $topic = "t∆∞ v·∫•n ng√†nh {$nganhHoc}";
    $matched = true;
}

// === 2. C√îNG TY ===
if (!$matched && (strpos($userMessage, 'c√¥ng ty') !== false || strpos($userMessage, 'th·ª±c t·∫≠p') !== false)) {
    $result = $conn->query("SELECT ten_cong_ty, linh_vuc, dia_chi FROM cong_ty WHERE trang_thai='ƒê√£ duy·ªát' LIMIT 5");
    if ($result->num_rows > 0) {
        $dataText .= "**DANH S√ÅCH C√îNG TY TH·ª∞C T·∫¨P**:\n\n";
        while ($row = $result->fetch_assoc()) {
            $dataText .= "üè¢ **{$row['ten_cong_ty']}**\nüìã **Lƒ©nh v·ª±c**: {$row['linh_vuc']}\nüìç **ƒê·ªãa ch·ªâ**: {$row['dia_chi']}\n\n";
        }
    } else {
        $dataText .= "Kh√¥ng t√¨m th·∫•y c√¥ng ty th·ª±c t·∫≠p n√†o ph√π h·ª£p.\n";
    }
    $topic = 'c√¥ng ty th·ª±c t·∫≠p';
    $matched = true;
}

// === 3. TUY·ªÇN D·ª§NG ===
if (!$matched && (strpos($userMessage, 'tuy·ªÉn d·ª•ng') !== false || strpos($userMessage, 'vi·ªác l√†m') !== false || strpos($userMessage, 'job') !== false)) {
    $sql = "SELECT t.tieu_de, t.mo_ta, t.luong, t.hinh_thuc_lam_viec, c.ten_cong_ty, c.dia_chi
            FROM tuyen_dung t
            JOIN cong_ty c ON t.stt_cty = c.stt_cty
            WHERE t.trang_thai = 'ƒê√£ duy·ªát'
            ORDER BY t.ngay_dang DESC
            LIMIT 5";
    $result = $conn->query($sql);
    if ($result->num_rows > 0) {
        $dataText .= "**DANH S√ÅCH TIN TUY·ªÇN D·ª§NG M·ªöI NH·∫§T**:\n\n";
        while ($row = $result->fetch_assoc()) {
            $dataText .= "üíº **{$row['tieu_de']}**\nüè¢ **C√¥ng ty**: {$row['ten_cong_ty']}\nüìç **ƒê·ªãa ch·ªâ**: {$row['dia_chi']}\n";
            if (!empty($row['luong'])) $dataText .= "üí∞ **L∆∞∆°ng**: {$row['luong']}\n";
            if (!empty($row['hinh_thuc_lam_viec'])) $dataText .= "‚è∞ **H√¨nh th·ª©c**: {$row['hinh_thuc_lam_viec']}\n";
            $dataText .= "üìÑ **M√¥ t·∫£**: " . substr($row['mo_ta'], 0, 100) . "...\n\n";
        }
    } else {
        $dataText .= "Kh√¥ng t√¨m th·∫•y tin tuy·ªÉn d·ª•ng n√†o.\n";
    }
    $topic = 'tuy·ªÉn d·ª•ng';
    $matched = true;
}

// === 4. B√ÅO C√ÅO ===
if (!$matched && strpos($userMessage, 'b√°o c√°o') !== false) {
    $result = $conn->query("SELECT noi_dung, ngay_gui FROM bao_cao_thuc_tap ORDER BY ngay_gui DESC LIMIT 3");
    if ($result->num_rows > 0) {
        $dataText .= "**TH√îNG TIN B√ÅO C√ÅO TH·ª∞C T·∫¨P**:\n\n";
        while ($row = $result->fetch_assoc()) {
            $dataText .= "üìã **N·ªôi dung**: {$row['noi_dung']}\nüìÖ **Ng√†y g·ª≠i**: {$row['ngay_gui']}\n\n";
        }
    } else {
        $dataText .= "Kh√¥ng t√¨m th·∫•y b√°o c√°o th·ª±c t·∫≠p n√†o.\n";
    }
    $topic = 'b√°o c√°o th·ª±c t·∫≠p';
    $matched = true;
}

// === 5. ƒê√ÅNH GI√Å ===
if (!$matched && strpos($userMessage, 'ƒë√°nh gi√°') !== false) {
    $result = $conn->query("SELECT ten_co_so, tieu_de_tuyen_dung, nhan_xet_chung FROM danh_gia_thuc_tap LIMIT 3");
    if ($result->num_rows > 0) {
        $dataText .= "**ƒê√ÅNH GI√Å TH·ª∞C T·∫¨P**:\n\n";
        while ($row = $result->fetch_assoc()) {
            $dataText .= "üè¢ **C∆° s·ªü**: {$row['ten_co_so']}\nüíº **V·ªã tr√≠**: {$row['tieu_de_tuyen_dung']}\nüìù **Nh·∫≠n x√©t**: {$row['nhan_xet_chung']}\n\n";
        }
    } else {
        $dataText .= "Kh√¥ng t√¨m th·∫•y ƒë√°nh gi√° th·ª±c t·∫≠p n√†o.\n";
    }
    $topic = 'ƒë√°nh gi√° th·ª±c t·∫≠p';
    $matched = true;
}

// === 6. KHOA ===
if (!$matched && (strpos($userMessage, 'khoa') !== false || strpos($userMessage, 'th√¥ng b√°o c√°c khoa') !== false)) {
    $result = $conn->query("SELECT ten_khoa, mo_ta FROM khoa");
    if ($result && $result->num_rows > 0) {
        $dataText .= "**DANH S√ÅCH C√ÅC KHOA**:\n\n";
        while ($row = $result->fetch_assoc()) {
            $dataText .= "üè´ **Khoa**: {$row['ten_khoa']}\nüìù **M√¥ t·∫£**: " . (!empty($row['mo_ta']) ? $row['mo_ta'] : "Ch∆∞a c√≥ m√¥ t·∫£.") . "\n\n";
        }
    } else {
        $dataText .= "Kh√¥ng t√¨m th·∫•y th√¥ng tin v·ªÅ c√°c khoa.\n";
    }
    $topic = 'th√¥ng tin khoa';
    $matched = true;
}

// === 7. KI·∫æN TH·ª®C NGO√ÄI CSDL ===
if (!$matched) {
    $dataText .= "C√¢u h·ªèi c·ªßa b·∫°n kh√¥ng c√≥ d·ªØ li·ªáu trong h·ªá th·ªëng, t√¥i s·∫Ω h·ªó tr·ª£ b·∫±ng ki·∫øn th·ª©c t·ªïng qu√°t.\n";
    $topic = 'h·ªèi ƒë√°p ngo√†i h·ªá th·ªëng';
}

// === G·ª¨I PROMPT T·ªöI GEMINI ===
$prompt = <<<EOD
B·∫°n l√† tr·ª£ l√Ω chatbot cho h·ªá th·ªëng th·ª±c t·∫≠p c·ªßa Tr∆∞·ªùng ƒê·∫°i h·ªçc T√†i nguy√™n v√† M√¥i tr∆∞·ªùng H√† N·ªôi (HUNRE).

**Th√¥ng tin li√™n quan ƒë·∫øn ch·ªß ƒë·ªÅ "{$topic}"**:
{$dataText}

**C√¢u h·ªèi t·ª´ sinh vi√™n**: "{$userMessage}"

**H∆∞·ªõng d·∫´n tr·∫£ l·ªùi**:
1. Tr·∫£ l·ªùi th√¢n thi·ªán, chuy√™n nghi·ªáp b·∫±ng ti·∫øng Vi·ªát.
2. S·ª≠ d·ª•ng d·ªØ li·ªáu tr√™n ƒë·ªÉ cung c·∫•p th√¥ng tin ch√≠nh x√°c (n·∫øu c√≥).
3. N·∫øu kh√¥ng c√≥ d·ªØ li·ªáu, s·ª≠ d·ª•ng ki·∫øn th·ª©c c·ªßa b·∫°n ƒë·ªÉ ƒë∆∞a ra l·ªùi khuy√™n h·ªØu √≠ch.
4. ƒê·ªãnh d·∫°ng d·ªÖ ƒë·ªçc v·ªõi emoji, cƒÉn l·ªÅ r√µ r√†ng.
5. N·∫øu c·∫ßn th√™m h·ªó tr·ª£, g·ª£i √Ω sinh vi√™n li√™n h·ªá qua email: support@hunre.edu.vn.
6. S·ª≠ d·ª•ng markdown ƒë·ªÉ ƒë·ªãnh d·∫°ng.
EOD;

$data = ["contents" => [["parts" => [["text" => $prompt]]]]];

$options = [
    'http' => [
        'header'  => "Content-Type: application/json\r\n",
        'method'  => 'POST',
        'content' => json_encode($data)
    ]
];

$context = stream_context_create($options);
$response = file_get_contents($apiUrl, false, $context);

if (!$response) {
    echo json_encode(['error' => 'Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi Gemini API']);
    exit;
}

$json = json_decode($response, true);
$reply = $json['candidates'][0]['content']['parts'][0]['text'] ?? "Xin l·ªói, t√¥i ch∆∞a c√≥ c√¢u tr·∫£ l·ªùi ph√π h·ª£p.";

$conn->close();
echo json_encode(['reply' => $reply]);
